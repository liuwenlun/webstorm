import React from 'react';
import axios from 'axios';
import {
    Row,
    Col,
    Menu,
    Icon,
    Button,
    Modal,
    Tabs,
    Form,
    Input,
    message
} from 'antd';

import logo from '../images/logo.png';

const MenuItem = Menu.Item;
const TabPane = Tabs.TabPane;
const FormItem = Form.Item;

class NewsHeader extends React.Component{
    constructor(props){
        super(props);
        this.state = {
            key : 'top',
            username : null,
            userId : null,
            isShow :  true
        }
    }
    changeKey = (event) => {
        //console.log(event); //item, key
        //判断用户点击的是否是登录注册的按钮
        if(event.key === 'loginAndRegister'){
            this.setState({
                isShow : true
            });
            this.props.form.resetFields();//清空表单项的所有内容
        }
        //更新状态
        this.setState({
            key : event.key,
        })
    };

    //定义点击关闭对话框的方法
    handleShow = (isShow, event) => {
        console.log(isShow, event);
        this.setState({isShow});
    };

    // changeValue = () => {
    //     this.props.form.resetFields();
    // };

    //定义点击登录注册的方法
    handleSubmit = (isRegister, event) => {
        //阻止默认行为
        event.preventDefault();
        //发送请求
        let action = isRegister?'register':'login';
        let user = this.props.form.getFieldsValue();
        //拼接url
        let url = `http://newsapi.gugujiankong.com/Handler.ashx?action=${action}&username=${user.username}&password=${user.password}&r_userName=${user.r_userName}&r_password=${user.r_password}&r_confirmPassword=${user.r_confirmPassword}`

        axios.get(url)
            .then(response => {
                let data = response.data;
                console.log(data);
                //判断登录还是注册
                if(isRegister){//表示的是注册
                    message.success('恭喜您，注册成功');
                }else{
                    //判断登录是否成功
                    if(!data){
                        message.error('登录失败');
                    }else{
                        //更新状态
                        this.setState({
                            username : data.NickUserName,
                            userId : data.UserId
                        })
                        message.success('登录成功');
                    }
                }
            })
            .catch(error => {
                console.log(error);
            })

        //更新状态
        this.setState({
            isShow : false
        })
    };
    //点击退出的方法
    handleOut = () => {
        this.setState({
            username : null,
            userId : null
        })
    }
    render(){
        let {key, username, userId, isShow} = this.state;//对象的解构赋值
        let {getFieldDecorator} = this.props.form;
        let UserItem = username
        ?(
            <MenuItem className="register" key="person">
                <Button type="primary">{username}</Button>&nbsp;&nbsp;
                <Button type="dashed">个人中心</Button>&nbsp;&nbsp;
                <Button onClick={this.handleOut} type="Ghost">退出</Button>
            </MenuItem>
        )
        :(
            <MenuItem className="register" key="loginAndRegister">
                <Icon type="appstore"/> 登录/注册
            </MenuItem>
        );
        return (
            <Row>
                <Col span={1}></Col>
                <Col span={3}>
                    <div className="logo">
                        <img src={logo} alt=""/>
                        <span>ReactNews</span>
                    </div>
                </Col>
                <Col span={19}>
                    <Menu onClick={this.changeKey} mode="horizontal" selectedKeys={[key]}>
                        <MenuItem key="top">
                            <Icon type="appstore"/> 头条
                        </MenuItem>
                        <MenuItem key="shehui">
                            <Icon type="appstore"/> 社会
                        </MenuItem>
                        <MenuItem key="guonei">
                            <Icon type="appstore"/>国内
                        </MenuItem>
                        <MenuItem key="guoji">
                            <Icon type="appstore"/>国际
                        </MenuItem>
                        <MenuItem key="yule">
                            <Icon type="appstore"/>娱乐
                        </MenuItem>
                        <MenuItem key="tiyu">
                            <Icon type="appstore"/>体育
                        </MenuItem>
                        <MenuItem key="keji">
                            <Icon type="appstore"/>科技
                        </MenuItem>
                        <MenuItem key="shishang">
                            <Icon type="appstore"/>时尚
                        </MenuItem>
                        {UserItem}
                    </Menu>
                    <Modal title='用户中心' visible={isShow} okText='关闭'
                    onOk={this.handleShow.bind(this, false)} onCancel={this.handleShow.bind(this, false)}>
                        <Tabs onChange={() => this.props.form.resetFields()}>
                            <TabPane tab="登录" key="1">
                                <Form onSubmit={this.handleSubmit.bind(this, false)}>
                                    <FormItem label='用户名:'>
                                        {
                                            getFieldDecorator('username')(
                                                <Input  type="text" placeholder="请输入用户名"/>
                                            )
                                        }
                                    </FormItem>
                                    <FormItem label='密码:'>
                                        {
                                            getFieldDecorator('password')(
                                                <Input  type="password" placeholder="请输入密码"/>
                                            )
                                        }
                                    </FormItem>
                                    <Button htmlType='submit' type="primary">登录</Button>
                                </Form>
                            </TabPane>
                            <TabPane tab="注册" key="2">
                                <Form onSubmit={this.handleSubmit.bind(this, true)}>
                                    <FormItem label='用户名:'>
                                        {
                                            getFieldDecorator('r_username')(
                                                <Input  type="text" placeholder="请输入用户名"/>
                                            )
                                        }
                                    </FormItem>
                                    <FormItem label='密码:'>
                                        {
                                            getFieldDecorator('r_password')(
                                                <Input  type="password" placeholder="请输入密码"/>
                                            )
                                        }
                                    </FormItem>
                                    <FormItem label='确认密码:'>
                                        {
                                            getFieldDecorator('r_confirmPassword')(
                                                <Input  type="password" placeholder="请再次输入密码"/>
                                            )
                                        }
                                    </FormItem>
                                    <Button htmlType='submit' type="primary">注册 </Button>
                                </Form>
                            </TabPane>
                        </Tabs>
                    </Modal>
                </Col>

                <Col span={1}></Col>
            </Row>
        )
    }
}
export default Form.create()(NewsHeader);

// this.props.form  里边有很多API
